// <auto-generated />
using System;
using BoaEntrega.GSL.Mercadorias.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoaEntrega.GSL.Mercadorias.Data.Migrations
{
    [DbContext(typeof(MercadoriaContext))]
    [Migration("20211010191419_criacao-entidades")]
    partial class criacaoentidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoaEntrega.GSL.Mercadorias.Domain.Deposito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("CapacidadeAlocada")
                        .HasColumnType("real");

                    b.Property<float>("CapacidadeMaxima")
                        .HasColumnType("real");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("BoaEntrega.GSL.Mercadorias.Domain.Mercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoRastreamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataEntrega")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DepositoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.ToTable("Mercadorias");
                });

            modelBuilder.Entity("BoaEntrega.GSL.Mercadorias.Domain.Deposito", b =>
                {
                    b.OwnsOne("BoaEntrega.GSL.Core.DomainObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("DepositoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UF")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DepositoId");

                            b1.ToTable("Depositos");

                            b1.WithOwner()
                                .HasForeignKey("DepositoId");
                        });
                });

            modelBuilder.Entity("BoaEntrega.GSL.Mercadorias.Domain.Mercadoria", b =>
                {
                    b.HasOne("BoaEntrega.GSL.Mercadorias.Domain.Deposito", "Deposito")
                        .WithMany("Mercadorias")
                        .HasForeignKey("DepositoId");

                    b.OwnsOne("BoaEntrega.GSL.Core.DomainObjects.Endereco", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<Guid>("MercadoriaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UF")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MercadoriaId");

                            b1.ToTable("Mercadorias");

                            b1.WithOwner()
                                .HasForeignKey("MercadoriaId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
